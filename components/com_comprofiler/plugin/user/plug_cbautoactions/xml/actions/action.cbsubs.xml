<?xml version="1.0" encoding="UTF-8"?>
<cbxml version="1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="file:../../../../../../../validation/ahawow.xsd">
	<types>
		<type name="autoaction_type" base="xml:autoaction_type">
			<option value="cbsubs">CB Paid Subscriptions</option>
		</type>
		<type name="autoaction_triggers" base="xml:autoaction_triggers">
			<optgroup label="CB Paid Subscriptions">
				<option value="onCPayAfterPlanRenewalSelected" translate="no">onCPayAfterPlanRenewalSelected</option>
				<option value="onCPayEditBasketIntegration" translate="no">onCPayEditBasketIntegration</option>
				<option value="onCbSubsAfterPaymentBasket" translate="no">onCbSubsAfterPaymentBasket</option>
				<option value="onCPayBeforeDrawSomething" translate="no">onCPayBeforeDrawSomething</option>
				<option value="onCPayAfterDrawSomething" translate="no">onCPayAfterDrawSomething</option>
				<option value="onCPayBeforeDrawPlan" translate="no">onCPayBeforeDrawPlan</option>
				<option value="onCPayAfterDrawPlan" translate="no">onCPayAfterDrawPlan</option>
				<option value="onCPayAfterPlanSelected" translate="no">onCPayAfterPlanSelected</option>
				<option value="onCPayAfterPaymentStatusChange" translate="no">onCPayAfterPaymentStatusChange</option>
				<option value="onCPayAfterPaymentStatusUpdateEvent" translate="no">onCPayAfterPaymentStatusUpdateEvent</option>
				<option value="onCPayBeforeBackendPlanDisplay" translate="no">onCPayBeforeBackendPlanDisplay</option>
				<option value="onCPayBeforeDisplayProductPeriodPrice" translate="no">onCPayBeforeDisplayProductPeriodPrice</option>
				<option value="onCPayAfterDisplayProductPeriodPrice" translate="no">onCPayAfterDisplayProductPeriodPrice</option>
				<option value="onCPayBeforeComputeTotalizersPaymentBasketUpdated" translate="no">onCPayBeforeComputeTotalizersPaymentBasketUpdated</option>
				<option value="onCPayBeforeStorePaymentBasketUpdated" translate="no">onCPayBeforeStorePaymentBasketUpdated</option>
				<option value="onCPayAfterPaymentBasketUpdated" translate="no">onCPayAfterPaymentBasketUpdated</option>
				<option value="onCPayPaymentItemEvent" translate="no">onCPayPaymentItemEvent</option>
				<option value="onCPayBeforeGetProductPrice" translate="no">onCPayBeforeGetProductPrice</option>
				<option value="onCPayAfterGetProductPrice" translate="no">onCPayAfterGetProductPrice</option>
				<option value="onCPayBeforeDisplaySubscriptionPeriodPrice" translate="no">onCPayBeforeDisplaySubscriptionPeriodPrice</option>
				<option value="onCPayAfterDisplaySubscriptionPeriodPrice" translate="no">onCPayAfterDisplaySubscriptionPeriodPrice</option>
				<option value="onCPayUserStateChange" translate="no">onCPayUserStateChange</option>
				<option value="onCPayBeforeMailerEmailMessageSent" translate="no">onCPayBeforeMailerEmailMessageSent</option>
				<option value="onCPayBeforeMailerPrivateMessageSent" translate="no">onCPayBeforeMailerPrivateMessageSent</option>
				<option value="onCPayAfterMailerMessageSent" translate="no">onCPayAfterMailerMessageSent</option>
				<option value="onCPayBeforeDrawSubscription" translate="no">onCPayBeforeDrawSubscription</option>
			</optgroup>
		</type>
	</types>
	<views>
		<view name="actiontype_cbsubs" type="params" ui="admin">
			<extend type="plugin" toxpathnode="/cbxml/types" fromxpathnode="/*/types/type" file="xml/edit.plugin,xml/edit.cbsubs" mandatory="false" mode="extend" keyattribute="name" />
			<extend type="plugin" toxpathnode="/cbxml/views" fromxpathnode="/*/views/view" file="xml/edit.plugin,xml/edit.cbsubs" mandatory="false" mode="extend" keyattribute="name" />
			<param name="" type="spacer" display="2lines" label="" default="Subscribes, Unsubscribes, Renews, or Deletes user subscriptions on the users behalf and create promotions." />
			<params name="cbsubs" type="params" repeat="true" label="" display="2lines">
				<param name="mode" type="list" default="1" label="Mode" onchange="evaluate" description="Select mode of plans. Mode determines what the plans should do when action is triggered. Note only exsiting subscriptions can be renewed, unsubscribed, or deleted.">
					<option value="1">Subscribe</option>
					<option value="2">Renew</option>
					<option value="3">Unsubscribe</option>
					<option value="4">Delete</option>
					<option value="5">Promotion</option>
				</param>
				<if name="mode" nametype="param:int" operator="&lt;" value="5" valuetype="const:int" type="condition">
					<if name="mode" nametype="param:int" operator="=" value="1" valuetype="const:int" type="condition">
						<param name="renew" type="yesno" default="0" label="Renew" description="Enable or disable automatic renewal of the selected plans if already subscribed." />
					</if>
					<param name="plans" type="list" multiple="true" size="10" blanktext="" label="Plans" description="Select plans by plan alias." validate="required">
						<data name="" type="private" class="\CB\Plugin\AutoActions\Action\CbsubsAction" method="plans" />
					</param>
					<param name="user" type="text" label="User" description="Optionally input substitution supported user as single integer user_id. Leave blank to use trigger user. Note this will result in user substitutions being from the specified user_id." size="10" />
				</if>
				<if name="mode" nametype="param:int" operator="=" value="5" valuetype="const:int" type="condition">
					<if name="" nametype="data:int" operator="=" value="1" valuetype="const:int" type="condition">
						<left>
							<param name="" type="private" class="\CB\Plugin\AutoActions\Action\CbsubsAction" method="promotions" />
						</left>
						<then>
							<fieldset name="promotionpromotion" label="Promotion">
								<params name="promotion" type="params" label="">
									<param name="name" type="text" size="64" default="" validate="required" label="Name of promotion" description="This is the promotion name, visible by customer. CB substitutions can be used here, so that for instance the text can be personalized for the user." />
									<tabpane name="cpayeditpromo">
										<showview mode="edit" type="xml" file="/components/com_comprofiler/plugin/user/plug_cbpaidsubscriptions/plugin/cbsubspromotion/xml/edit.cbsubs" path="/*/views/view[@name=&quot;editpromotions&quot;]/*[tabpanetab]" formatting="table" />
									</tabpane>
									<showview name="integrationsglobals" mode="edit" type="plugins" groups="user/plug_cbpaidsubscriptions/plugin,user[cbsubs.]" action="" path="payintegrationeditpromotions" />
								</params>
								<param name="create_by" type="list" default="name" label="Load" description="Select if this promotion should be loaded by the selected criteria to see if it exists first. If it does exist it will be updated instead of a new promotion created. Note only the first promotion found will be loaded.">
									<option value="none">None</option>
									<option value="name">By Name Only</option>
									<option value="coupon">By Coupon Code Only</option>
									<option value="name_coupon">By Name and Coupon Code</option>
								</param>
							</fieldset>
						</then>
						<else>
							<param name="" type="spacer" display="2lines" label="" default="CSubs Promotion installation not found!" />
						</else>
					</if>
				</if>
			</params>
		</view>
	</views>
</cbxml>
